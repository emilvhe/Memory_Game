from time import time
import random
from functions import *
import tkinter as tk

attempt = 0


with open("memo.txt", "r") as f:
    full_list = []
    for line in f.readlines():
        clean = line.strip()
        full_list.append(clean)

small_list = random.sample(full_list, 18)

game_list = []

for item in small_list:
    game_list.append(item)
    game_list.append(item)

random.shuffle(game_list)


class Board:
    def __init__(self):
        self.grid = {}
        rows = ['A', 'B', 'C', 'D', 'E', 'F']
        cols = [1, 2, 3, 4, 5, 6]
        for row in rows:
            for col in cols:
                self.grid[row + str(col)] = None
        self.matched_cards = []

    def set_value(self, row, col, value):
        self.grid[row + str(col)] = value

    def get_value(self, row, col):
        return self.grid[row + str(col)]

    def get_all_values(self):
        return self.grid.values()
    
    def hide_value(self, row, col):
        self.grid[row + str(col)] = None
        
    def add_matched_card(self, row, col):
        self.matched_cards.append(row + str(col))
        
    def is_matched_card(self, row, col):
        return row + str(col) in self.matched_cards


# create a new grid object
grid = Board()

i = 0
for row in grid.grid.keys():
    grid.set_value(row[0], int(row[1]), game_list[i])
    if i < 36:
        i += 1
        continue
    else:
        break


def reveal_word(row, col):
    # Get the corresponding button
    button = buttons[(row-1)*6 + (col-1)]
    
    try:
        # Get the value of the corresponding card on the board
        global value
        value = grid.get_value(chr(row + 64), col)
        print("Value retrieved: {}".format(value))

        # Set the text of the button to the revealed word
        button.config(text=value)

        # Disable the button so it cannot be clicked again
        button.config(state=tk.DISABLED)
        
        # Add the revealed card to the list of matched cards
        if check_match():
            grid.add_matched_card(chr(row + 64), col)
        
    except Exception as e:
        print("Error: {}".format(str(e)))


def hide_word(row, col):
    if grid.is_matched_card(chr(row + 64), col):
        return
    
    button = buttons[(row-1)*6 + (col-1)]
    button.config(text=" ")
    button.config(state=tk.NORMAL)


# Tkinter GUI
root = tk.Tk()
root.title("Emil A1-F6 IQ Spel!")
root.geometry("960x620
